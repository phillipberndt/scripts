#!/usr/bin/env python
#
# Choose as many images from the ~/.bg folder as there are screens, properly
# scale them to fit them and set them as the cinnamon background image.
#
#

import PIL.Image
import PIL.ImageDraw
import os
import random
import re
import time

imgdir = os.path.expanduser("~/.bg/")
randr = os.popen("xrandr -q").read()
screens = [ [ int(x) for x in y ] for y in re.findall(" connected.* ([0-9]+)x([0-9]+)\+([0-9]+)", randr) ]

images = random.sample([ x for x in os.listdir(imgdir) if x.lower()[-3:] in ("jpg", "png") ], len(screens))

max_height = max(( x[1] for x in screens ))
total_width  = sum(( x[0] for x in screens ))

output = PIL.Image.new("RGB", (total_width, max_height))
draw = PIL.ImageDraw.Draw(output)

for no in range(len(screens)):
	screen = screens[no]
	image = PIL.Image.open(os.path.join(imgdir, images[no]))
	output_size = list(image.size)

	if output_size[0] > screen[0] and output_size[1] > screen[1]:
		if output_size[0] - screen[0] < output_size[1] - screen[1]:
			output_size[1] = output_size[1] * screen[0] / output_size[0];
			output_size[0] = screen[0]
		else:
			output_size[0] = output_size[0] * screen[1] / output_size[1];
			output_size[1] = screen[1]

	image = image.resize(output_size)
	output_top = (screen[1] - output_size[1]) / 2
	output_left = (screen[0] - output_size[0]) / 2

	if output_left < 0:
		image = image.crop([ -output_left, 0, output_size[0], output_size[1]])
		output_left = 0
	if output_size[0] + output_left > screen[0]:
		image = image.crop([ 0, 0, screen[0] - output_left, image.size[1]])

	draw.rectangle([ screen[2], 0, screen[2] + screen[0], max_height ], fill=(0, 0, 0))
	output.paste(image.resize(output_size), (screen[2] + output_left, output_top))

os.system("rm -f /tmp/setbg_cinnamon_%d_*" % os.getuid())
filename = "/tmp/setbg_cinnamon_%d_%d.png" % (os.getuid(), time.time())
output.save(filename)

os.system('dconf write "/org/cinnamon/desktop/background/picture-uri" "\'file://%s\'"' % filename)
