#!/usr/bin/env python
#
# Choose as many images from the ~/.bg folder as there are screens, properly
# scale them to fit them and set them as the cinnamon background image.
#
#

import PIL.Image
import PIL.ImageDraw
import os
import random
import re
import time
try:
    import numpy as np
    import scipy.interpolate
    CAN_DO_GRADIENTS=True
except:
    CAN_DO_GRADIENTS=False

imgdir = os.path.expanduser("~/.bg/")
randr = os.popen("xrandr -q").read()
screens = [ [ int(x) for x in y ] for y in re.findall(" connected.* ([0-9]+)x([0-9]+)\+([0-9]+)", randr) ]

images = random.sample([ x for x in os.listdir(imgdir) if x.lower()[-3:] in ("jpg", "png") ], len(screens))

max_height = max(( x[1] for x in screens ))
total_width  = sum(( x[0] for x in screens ))

output = PIL.Image.new("RGB", (total_width, max_height))
draw = PIL.ImageDraw.Draw(output)

for no in range(len(screens)):
	screen = screens[no]
	image = PIL.Image.open(os.path.join(imgdir, images[no]))
	output_size = list(image.size)

	if output_size[0] > screen[0] and output_size[1] > screen[1]:
		if output_size[0] - screen[0] < output_size[1] - screen[1]:
			output_size[1] = output_size[1] * screen[0] / output_size[0];
			output_size[0] = screen[0]
		else:
			output_size[0] = output_size[0] * screen[1] / output_size[1];
			output_size[1] = screen[1]

	image = image.resize(output_size)
	output_top = (screen[1] - output_size[1]) / 2
	output_left = (screen[0] - output_size[0]) / 2

	if output_left < 0:
		image = image.crop([ -output_left, 0, output_size[0], output_size[1]])
		output_left = 0
	if output_size[0] + output_left > screen[0]:
		image = image.crop([ 0, 0, screen[0] - output_left, image.size[1]])

        if CAN_DO_GRADIENTS:
            np_img = np.array(image)
            top_left_avg = np.apply_over_axes(np.mean, np_img[:50, :50], [0, 1]).reshape(3)
            top_right_avg = np.apply_over_axes(np.mean, np_img[-50:, :50], [0, 1]).reshape(3)
            btm_left_avg = np.apply_over_axes(np.mean, np_img[:50, -50:], [0, 1]).reshape(3)
            btm_right_avg = np.apply_over_axes(np.mean, np_img[-50:, -50:], [0, 1]).reshape(3)
            interps = [ scipy.interpolate.interp2d([0, screen[0], 0, screen[0]], [0, 0, screen[1], screen[1]], [ top_left_avg[col], btm_left_avg[col], top_right_avg[col], btm_right_avg[col]]) for col in range(3) ]
            xx = np.arange(screen[0])
            yy = np.arange(screen[1])
            np_gradient = np.rollaxis(np.array([interps[col](xx, yy) for col in range(3)]), 0, 3)
            gradient = PIL.Image.fromarray(np_gradient.astype(np.uint8))
            output.paste(gradient, (screen[2], 0))
        else:
            draw.rectangle([ screen[2], 0, screen[2] + screen[0], max_height ], fill=(0, 0, 0))
	output.paste(image.resize(output_size), (screen[2] + output_left, output_top))

os.system("rm -f /tmp/setbg_cinnamon_%d_*" % os.getuid())
filename = "/tmp/setbg_cinnamon_%d_%d.png" % (os.getuid(), time.time())
output.save(filename)

os.system('dconf write "/org/cinnamon/desktop/background/picture-uri" "\'file://%s\'"' % filename)
os.system('dconf write "/org/cinnamon/desktop/background/picture-options" "\'spanned\'"')
